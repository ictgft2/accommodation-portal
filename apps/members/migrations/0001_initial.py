# Generated by Django 4.2.24 on 2025-09-12 10:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('service_units', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemberServiceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, help_text='Position or role in the service unit', max_length=100)),
                ('start_date', models.DateField(help_text='When the member started serving in this unit')),
                ('end_date', models.DateField(blank=True, help_text='When the member stopped serving in this unit (null if still active)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this service assignment is currently active')),
                ('notes', models.TextField(blank=True, help_text="Notes about the member's service in this unit")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(help_text='Member whose service history this is', on_delete=django.db.models.deletion.CASCADE, related_name='service_history', to=settings.AUTH_USER_MODEL)),
                ('service_unit', models.ForeignKey(help_text='Service unit the member served in', on_delete=django.db.models.deletion.CASCADE, related_name='member_history', to='service_units.serviceunit')),
            ],
            options={
                'verbose_name': 'Member Service History',
                'verbose_name_plural': 'Member Service Histories',
                'db_table': 'member_service_history',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='MemberProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], help_text="Member's gender", max_length=10)),
                ('country_code', models.CharField(default='+234', help_text='Phone number country code', max_length=10)),
                ('town_city', models.CharField(blank=True, help_text='Town or city of residence', max_length=100)),
                ('country', models.CharField(blank=True, help_text='Country of residence', max_length=100)),
                ('next_of_kin_name', models.CharField(blank=True, help_text='Next of kin full name', max_length=150)),
                ('next_of_kin_phone', models.CharField(blank=True, help_text='Next of kin phone number', max_length=20)),
                ('next_of_kin_country_code', models.CharField(default='+234', help_text='Next of kin phone country code', max_length=10)),
                ('next_of_kin_town_city', models.CharField(blank=True, help_text='Next of kin town or city', max_length=100)),
                ('next_of_kin_country', models.CharField(blank=True, help_text='Next of kin country', max_length=100)),
                ('date_of_birth', models.DateField(blank=True, help_text="Member's date of birth", null=True)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20)),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or allergies')),
                ('dietary_requirements', models.TextField(blank=True, help_text='Dietary requirements or restrictions')),
                ('remarks', models.TextField(blank=True, help_text='Additional remarks or notes')),
                ('membership_number', models.CharField(blank=True, help_text='Unique membership number', max_length=50, unique=True)),
                ('date_joined_church', models.DateField(blank=True, help_text='Date when member joined the church', null=True)),
                ('is_baptized', models.BooleanField(default=False, help_text='Whether the member is baptized')),
                ('baptism_date', models.DateField(blank=True, help_text='Date of baptism', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User this profile belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member Profile',
                'verbose_name_plural': 'Member Profiles',
                'db_table': 'member_profiles',
            },
        ),
    ]
