# Generated by Django 4.2.24 on 2025-09-16 20:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=100)),
                ('export_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON')], max_length=10)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_report_exports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('total_allocations', models.PositiveIntegerField(default=0)),
                ('new_allocations', models.PositiveIntegerField(default=0)),
                ('total_buildings', models.PositiveIntegerField(default=0)),
                ('total_rooms', models.PositiveIntegerField(default=0)),
                ('occupied_rooms', models.PositiveIntegerField(default=0)),
                ('pending_requests', models.PositiveIntegerField(default=0)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('allocation_events', models.PositiveIntegerField(default=0)),
                ('system_events', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'analytics_dashboard_metrics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('password_change', 'Password Change'), ('profile_update', 'Profile Update'), ('allocation_create', 'Allocation Created'), ('allocation_update', 'Allocation Updated'), ('allocation_delete', 'Allocation Deleted'), ('allocation_request', 'Allocation Requested'), ('allocation_approve', 'Allocation Approved'), ('allocation_reject', 'Allocation Rejected'), ('building_create', 'Building Created'), ('building_update', 'Building Updated'), ('building_delete', 'Building Deleted'), ('room_create', 'Room Created'), ('room_update', 'Room Updated'), ('room_delete', 'Room Deleted'), ('user_create', 'User Created'), ('user_update', 'User Updated'), ('user_delete', 'User Deleted'), ('user_activate', 'User Activated'), ('user_deactivate', 'User Deactivated'), ('service_unit_create', 'Service Unit Created'), ('service_unit_update', 'Service Unit Updated'), ('service_unit_delete', 'Service Unit Deleted'), ('report_generate', 'Report Generated'), ('report_export', 'Report Exported'), ('report_view', 'Report Viewed'), ('system_backup', 'System Backup'), ('system_maintenance', 'System Maintenance'), ('data_import', 'Data Import'), ('data_export', 'Data Export')], db_index=True, max_length=50)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('resource_type', models.CharField(blank=True, max_length=50, null=True)),
                ('resource_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_user_events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'event_type'], name='analytics_u_user_id_859e35_idx'), models.Index(fields=['timestamp', 'event_type'], name='analytics_u_timesta_4d6ca2_idx'), models.Index(fields=['resource_type', 'resource_id'], name='analytics_u_resourc_dc1ddd_idx'), models.Index(fields=['success'], name='analytics_u_success_95ec92_idx')],
            },
        ),
    ]
